# Generated by Django 2.2.17 on 2021-01-21 05:12

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lynx', '0058_auto_20210104_2358'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalVolunteer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(null=True)),
                ('note_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('bingo', models.BooleanField(blank=True, default=False)),
                ('access_news', models.BooleanField(blank=True, default=False)),
                ('programs', models.BooleanField(blank=True, default=False)),
                ('career_plus', models.BooleanField(blank=True, default=False)),
                ('other', models.TextField(null=True)),
                ('special_needs', models.TextField(null=True)),
                ('availability', models.TextField(null=True)),
                ('interests', models.TextField(null=True)),
                ('job_assignments', models.TextField(null=True)),
                ('personal_vehicle', models.BooleanField(blank=True, default=False)),
                ('vehicle_description', models.TextField(null=True)),
                ('time_sheets', models.TextField(null=True)),
                ('awards', models.TextField(null=True)),
                ('mandate_information', models.TextField(null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical volunteer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSipPlan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('other_services', models.BooleanField(blank=True, default=False)),
                ('plan_name', models.CharField(blank=True, max_length=100, null=True)),
                ('living_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('community_plan_progress', models.CharField(blank=True, choices=[('Plan not complete', 'Plan not complete'), ('Plan complete, feeling more confident in ability to maintain living situation', 'Plan complete, feeling more confident in ability to maintain living situation'), ('Plan complete, no difference in ability to maintain living situation', 'Plan complete, no difference in ability to maintain living situation'), ('Plan complete, feeling less confident in ability to maintain living situation', 'Plan complete, feeling less confident in ability to maintain living situation')], default='Plan not complete', max_length=150, null=True)),
                ('at_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed, improved independence', 'Assessed, improved independence'), ('Assessed, maintained independence', 'Assessed, maintained independence'), ('Assessed, decreased independence', 'Assessed, decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('ila_outcomes', models.CharField(blank=True, choices=[('Not assessed', 'Not assessed'), ('Assessed, improved independence', 'Assessed, improved independence'), ('Assessed, maintained independence', 'Assessed, maintained independence'), ('Assessed, decreased independence', 'Assessed, decreased independence')], default='Not assessed', max_length=150, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sip plan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSipNote',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(null=True)),
                ('note_date', models.DateField(blank=True, null=True)),
                ('vision_screening', models.BooleanField(blank=True, default=False)),
                ('treatment', models.BooleanField(blank=True, default=False)),
                ('at_devices', models.BooleanField(blank=True, default=False)),
                ('at_services', models.BooleanField(blank=True, default=False)),
                ('independent_living', models.BooleanField(blank=True, default=False)),
                ('orientation', models.BooleanField(blank=True, default=False)),
                ('communications', models.BooleanField(blank=True, default=False)),
                ('dls', models.BooleanField(blank=True, default=False)),
                ('support', models.BooleanField(blank=True, default=False)),
                ('advocacy', models.BooleanField(blank=True, default=False)),
                ('counseling', models.BooleanField(blank=True, default=False)),
                ('information', models.BooleanField(blank=True, default=False)),
                ('services', models.BooleanField(blank=True, default=False)),
                ('retreat', models.BooleanField(blank=True, default=False)),
                ('in_home', models.BooleanField(blank=True, default=False)),
                ('seminar', models.BooleanField(blank=True, default=False)),
                ('modesto', models.BooleanField(blank=True, default=False)),
                ('group', models.BooleanField(blank=True, default=False)),
                ('community', models.BooleanField(blank=True, default=False)),
                ('fiscal_year', models.CharField(blank=True, max_length=15, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('class_hours', models.FloatField(blank=True, choices=[(0.25, '15 Minutes'), (0.5, '30 Minutes'), (0.75, '45 Minutes'), (1, '1 Hour'), (1.25, '1 Hour 15 Minutes'), (1.5, '1 Hour 30 Minutes'), (1.75, '1 Hour 45 Minutes'), (2, '2 Hours'), (2.25, '2 Hours 15 Minutes'), (2.5, '2 Hours 30 Minutes'), (2.75, '2 Hours 45 Minutes'), (3, '3 Hours'), (3.25, '3 Hours 15 Minutes'), (3.5, '3 Hours 30 Minutes'), (3.75, '3 Hours 45 Minutes'), (4, '4 Hours'), (4.25, '4 Hours 15 Minutes'), (4.5, '4 Hours 30 Minutes'), (4.75, '4 Hours 45 Minutes'), (5, '5 Hours'), (5.25, '5 Hours 15 Minutes'), (5.5, '5 Hours 30 Minutes'), (5.75, '5 Hours 45 Minutes'), (6, '6 Hours'), (6.25, '6 Hours 15 Minutes'), (6.5, '6 Hours 30 Minutes'), (6.75, '6 Hours 45 Minutes'), (7, '7 Hours'), (7.25, '7 Hours 15 Minutes'), (7.5, '7 Hours 30 Minutes'), (7.75, '7 Hours 45 Minutes'), (8, '8 Hours')], null=True)),
                ('instructor', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sip_plan', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.SipPlan')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sip note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgressReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('month', models.CharField(blank=True, choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], max_length=25, null=True)),
                ('year', models.CharField(blank=True, max_length=25, null=True)),
                ('instructor', models.CharField(blank=True, max_length=150, null=True)),
                ('accomplishments', models.TextField(blank=True, null=True)),
                ('short_term_goals', models.TextField(blank=True, null=True)),
                ('short_term_goals_time', models.CharField(blank=True, max_length=150, null=True)),
                ('long_term_goals', models.TextField(blank=True, null=True)),
                ('long_term_goals_time', models.CharField(blank=True, max_length=150, null=True)),
                ('client_behavior', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('authorization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Authorization')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical progress report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPhone',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_type', models.CharField(blank=True, choices=[('Work', 'Work'), ('Home', 'Home'), ('Cell', 'Cell'), ('Evening', 'Evening'), ('Day', 'Day'), ('Fax', 'Fax'), ('Other', 'Other')], max_length=25, null=True)),
                ('active', models.BooleanField(blank=True, default=False)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('emergency_contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.EmergencyContact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical phone',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOutsideAgency',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('agency', models.CharField(blank=True, max_length=150, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=150, null=True)),
                ('active', models.BooleanField(blank=True, default=False)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical outside agency',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLessonNote',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today, null=True)),
                ('attendance', models.CharField(blank=True, choices=[('Present', 'Present'), ('Absent', 'Absent'), ('Other', 'Other')], default='Present', max_length=150, null=True)),
                ('instructional_units', models.CharField(blank=True, max_length=15, null=True)),
                ('billed_units', models.CharField(blank=True, choices=[('1', '15 Minutes'), ('2', '30 Minutes'), ('3', '45 Minutes'), ('4', '1 Hour'), ('5', '1 Hour 15 Minutes'), ('6', '1 Hour 30 Minutes'), ('7', '1 Hour 45 Minutes'), ('8', '2 Hours'), ('9', '2 Hours 15 Minutes'), ('10', '2 Hours 30 Minutes'), ('11', '2 Hours 45 Minutes'), ('12', '3 Hours'), ('13', '3 Hours 15 Minutes'), ('14', '3 Hours 30 Minutes'), ('15', '3 Hours 45 Minutes'), ('16', '4 Hours'), ('17', '4 Hours 15 Minutes'), ('18', '4 Hours 30 Minutes'), ('19', '4 Hours 45 Minutes'), ('20', '5 Hours'), ('21', '5 Hours 15 Minutes'), ('22', '5 Hours 30 Minutes'), ('23', '5 Hours 45 Minutes'), ('24', '6 Hours'), ('25', '6 Hours 15 Minutes'), ('26', '6 Hours 30 Minutes'), ('27', '6 Hours 45 Minutes'), ('28', '7 Hours'), ('29', '7 Hours 15 Minutes'), ('30', '7 Hours 30 Minutes'), ('31', '7 Hours 45 Minutes'), ('32', '8 Hours')], max_length=50, null=True)),
                ('students_no', models.CharField(blank=True, max_length=15, null=True)),
                ('successes', models.TextField(blank=True, null=True)),
                ('obstacles', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('authorization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Authorization')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical lesson note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIntakeServiceArea',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('agency', models.CharField(blank=True, max_length=150, null=True)),
                ('active', models.BooleanField(blank=True, default=False)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical intake service area',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIntakeNote',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('note', models.TextField(null=True)),
                ('note_type', models.CharField(max_length=250, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical intake note',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIntake',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('intake_date', models.DateField(default=datetime.date.today)),
                ('intake_type', models.CharField(blank=True, max_length=150, null=True)),
                ('age_group', models.CharField(blank=True, choices=[('Less than 54', 'Less than 54'), ('55-64', '55-64'), ('65-74', '65-74'), ('75-84', '75-84'), ('84+', '84+')], max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male'), ('Non-Binary', 'Non-Binary'), ('Gender Non-Conforming', 'Gender Non-Conforming'), ('Other (in notes)', 'Other (in notes)'), ('Prefer Not to Say', 'Prefer Not to Say')], max_length=50, null=True)),
                ('pronouns', models.CharField(blank=True, choices=[('He/Him', 'He/Him'), ('She/Her', 'She/Her'), ('They/Them', 'They/Them'), ('Ve/Ver', 'Ve/Ver'), ('Xe/Xim', 'Xe/Xim'), ('Ze/Hir', 'Ze/Hir'), ('Other (in notes)', 'Other (in notes)')], max_length=150, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('ethnicity', models.CharField(blank=True, choices=[('American Indian or Alaska Native', 'American Indian or Alaska Native'), ('Asian', 'Asian'), ('Black or African American', 'Black or African American'), ('Hispanic or Latino', 'Hispanic or Latino'), ('Native Hawaiian or Pacific Islander', 'Native Hawaiian or Pacific Islander'), ('White', 'White'), ('Other', 'Other'), ('Did not self identify Race', 'Did not self identify Race')], max_length=50, null=True)),
                ('other_ethnicity', models.CharField(blank=True, max_length=50, null=True)),
                ('income', models.CharField(blank=True, choices=[('<$12,500', '<$12,500'), ('$12,500-$25,000', '$12,500-$25,000'), ('$25,001-$50,000', '$25,001-$50,000'), ('$50,001-$75,000', '$50,001-$75,000'), ('$75,001-$100,000', '$75,001-$100,000'), ('$100,001-$125,000', '$100,001-$125,000'), ('$125,001-$1150,000', '$125,001-$150,000'), ('>$150,000', '>$150,000')], max_length=25, null=True)),
                ('first_language', models.CharField(blank=True, choices=[('English', 'English'), ('Armenian', 'Armenian'), ('Arabic', 'Arabic'), ('Bengali', 'Bengali'), ('Cantonese', 'Cantonese'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Dutch', 'Dutch'), ('Finnish', 'Finnish'), ('French', 'French'), ('German', 'German'), ('Greek', 'Greek'), ('Hebrew', 'Hebrew'), ('Hindi (urdu)', 'Hindi (urdu)'), ('Hmong', 'Hmong'), ('Hungarian', 'Hungarian'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Korean', 'Korean'), ('Lithuanian', 'Lithuanian'), ('Malayalam', 'Malayalam'), ('Mandarin', 'Mandarin'), ('Mon-khmer (cambodian)', 'Mon-khmer (cambodian)'), ('Norwegian', 'Norwegian'), ('Panjabi', 'Panjabi'), ('Persian', 'Persian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Russian', 'Russian'), ('Slovak', 'Slovak'), ('Samoan', 'Samoan'), ('Spanish', 'Spanish'), ('Swahili', 'Swahili'), ('Swedish', 'Swedish'), ('Tagalog', 'Tagalog'), ('Thai (laotian)', 'Thai (laotian)'), ('Turkish', 'Turkish'), ('Ukrainian', 'Ukrainian'), ('Vietnamese', 'Vietnamese')], max_length=50, null=True)),
                ('second_language', models.CharField(blank=True, choices=[('English', 'English'), ('Armenian', 'Armenian'), ('Arabic', 'Arabic'), ('Bengali', 'Bengali'), ('Cantonese', 'Cantonese'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Dutch', 'Dutch'), ('Finnish', 'Finnish'), ('French', 'French'), ('German', 'German'), ('Greek', 'Greek'), ('Hebrew', 'Hebrew'), ('Hindi (urdu)', 'Hindi (urdu)'), ('Hmong', 'Hmong'), ('Hungarian', 'Hungarian'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Korean', 'Korean'), ('Lithuanian', 'Lithuanian'), ('Malayalam', 'Malayalam'), ('Mandarin', 'Mandarin'), ('Mon-khmer (cambodian)', 'Mon-khmer (cambodian)'), ('Norwegian', 'Norwegian'), ('Panjabi', 'Panjabi'), ('Persian', 'Persian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Russian', 'Russian'), ('Slovak', 'Slovak'), ('Samoan', 'Samoan'), ('Spanish', 'Spanish'), ('Swahili', 'Swahili'), ('Swedish', 'Swedish'), ('Tagalog', 'Tagalog'), ('Thai (laotian)', 'Thai (laotian)'), ('Turkish', 'Turkish'), ('Ukrainian', 'Ukrainian'), ('Vietnamese', 'Vietnamese')], max_length=50, null=True)),
                ('other_languages', models.CharField(blank=True, max_length=150, null=True)),
                ('education', models.CharField(blank=True, choices=[('None', 'None'), ('Less than High School', 'Less than High School'), ('GED', 'GED'), ('High School', 'High School'), ('Associates', 'Associates'), ('Bachelors', 'Bachelors'), ('Masters', 'Masters'), ('Doctorate', 'Doctorate')], max_length=150, null=True)),
                ('living_arrangement', models.CharField(blank=True, choices=[('Live Alone', 'Live Alone'), ('Live With Spouse or Family', 'Live With Spouse or Family'), ('Live With Other', 'Live With Other'), ('Homeless', 'Homeless')], max_length=150, null=True)),
                ('residence_type', models.CharField(blank=True, choices=[('Private Residence', 'Private Residence'), ('Community Residential', 'Community Residential'), ('Assisted Living', 'Assisted Living'), ('Skilled Nursing Care', 'Skilled Nursing Care'), ('Senior Living', 'Senior Living'), ('Homeless', 'Homeless')], max_length=150, null=True)),
                ('performs_tasks', models.CharField(blank=True, choices=[('Visually', 'Visually'), ('Non-Visually', 'Non-Visually'), ('Both Visually and Non-Visually', 'Both Visually and Non-Visually')], max_length=150, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('work_history', models.TextField(blank=True, null=True)),
                ('veteran', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Other', 'Other')], max_length=25, null=True)),
                ('member_name', models.CharField(blank=True, max_length=250, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('crime', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Other', 'Other')], max_length=25, null=True)),
                ('crime_info', models.TextField(blank=True, null=True)),
                ('crime_other', models.CharField(blank=True, max_length=250, null=True)),
                ('parole', models.BooleanField(blank=True, default=False)),
                ('parole_info', models.CharField(blank=True, max_length=250, null=True)),
                ('crime_history', models.TextField(blank=True, null=True)),
                ('previous_training', models.TextField(blank=True, null=True)),
                ('training_goals', models.TextField(blank=True, null=True)),
                ('training_preferences', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('eye_condition', models.CharField(blank=True, choices=[('Cataracts', 'Cataracts'), ('Cone Rod Dystrophy', 'Cone Rod Dystrophy'), ('Diabetic Retinopathy', 'Diabetic Retinopathy'), ('Glaucoma', 'Glaucoma'), ('Keratoconus', 'Keratoconus'), ('Leber Hereditary Optic Neuropathy (LHON)', 'Leber Hereditary Optic Neuropathy (LHON)'), ('Macular Degeneration', 'Macular Degeneration'), ('Ocular Albinism', 'Ocular Albinism'), ('Optic Nerve Hypoplasia', 'Optic Nerve Hypoplasia'), ('Retinitis Pigmentosa (RP)', 'Retinitis Pigmentosa (RP)'), ('Retinopathy of Prematurity(ROP)', 'Retinopathy of Prematurity(ROP)'), ('Stargardt Disease', 'Stargardt Disease'), ('Stroke-related', 'Stroke-related'), ('Trauma or injury', 'Trauma or injury'), ('Uveitis', 'Uveitis'), ('Other', 'Other')], max_length=250, null=True)),
                ('secondary_eye_condition', models.CharField(blank=True, max_length=250, null=True)),
                ('eye_condition_date', models.DateField(blank=True, null=True)),
                ('degree', models.CharField(blank=True, choices=[('Totally Blind (NP or NLP)', 'Totally Blind (NP or NLP)'), ('Legally Blind', 'Legally Blind'), ('Severe Visual Impairment', 'Severe Visual Impairment'), ('Light Perception Only', 'Light Perception Only'), ('Low Vision', 'Low Vision')], max_length=250, null=True)),
                ('prognosis', models.CharField(blank=True, choices=[('Stable', 'Stable'), ('Diminishing', 'Diminishing')], max_length=250, null=True)),
                ('referred_by', models.CharField(blank=True, choices=[('DOR', 'DOR'), ('Alta', 'Alta'), ('Veterans Administration', 'Veterans Administration'), ('Physician', 'Physician'), ('Family or Friend', 'Family or Friend'), ('Senior Program', 'Senior Program'), ('Assisted Living Facility', 'Assisted Living Facility'), ('Nursing Home', 'Nursing Home'), ('Independent Living Center', 'Independent Living Center'), ('Self-Referral', 'Self-Referral'), ('Other', 'Other')], max_length=250, null=True)),
                ('diabetes', models.BooleanField(blank=True, default=False)),
                ('diabetes_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('dialysis', models.BooleanField(blank=True, default=False)),
                ('dialysis_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('hearing_loss', models.BooleanField(blank=True, default=False)),
                ('hearing_loss_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('mobility', models.BooleanField(blank=True, default=False)),
                ('mobility_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('stroke', models.BooleanField(blank=True, default=False)),
                ('stroke_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('seizure', models.BooleanField(blank=True, default=False)),
                ('seizure_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('heart', models.BooleanField(blank=True, default=False)),
                ('heart_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('arthritis', models.BooleanField(blank=True, default=False)),
                ('arthritis_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('high_bp', models.BooleanField(blank=True, default=False)),
                ('high_bp_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('neuropathy', models.BooleanField(blank=True, default=False)),
                ('neuropathy_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('dexterity', models.BooleanField(blank=True, default=False)),
                ('dexterity_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('migraine', models.BooleanField(blank=True, default=False)),
                ('migraine_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('pain', models.BooleanField(blank=True, default=False)),
                ('pain_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('asthma', models.BooleanField(blank=True, default=False)),
                ('asthma_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('cancer', models.BooleanField(blank=True, default=False)),
                ('cancer_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('musculoskeletal', models.BooleanField(blank=True, default=False)),
                ('musculoskeletal_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('alzheimers', models.BooleanField(blank=True, default=False)),
                ('alzheimers_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('geriatric', models.BooleanField(blank=True, default=False)),
                ('geriatric_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('allergies', models.CharField(blank=True, max_length=250, null=True)),
                ('mental_health', models.CharField(blank=True, max_length=250, null=True)),
                ('substance_abuse', models.BooleanField(blank=True, default=False)),
                ('substance_abuse_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('memory_loss', models.BooleanField(blank=True, default=False)),
                ('memory_loss_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('learning_disability', models.BooleanField(blank=True, default=False)),
                ('learning_disability_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('communication', models.BooleanField(blank=True, default=False)),
                ('communication_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('other_medical', models.CharField(blank=True, max_length=250, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('medical_notes', models.TextField(blank=True, null=True)),
                ('hobbies', models.TextField(blank=True, null=True)),
                ('employment_goals', models.TextField(blank=True, null=True)),
                ('hired', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Other', 'Other')], max_length=25, null=True)),
                ('employer', models.CharField(blank=True, max_length=250, null=True)),
                ('position', models.CharField(blank=True, max_length=250, null=True)),
                ('hire_date', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('payment_source', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.OutsideAgency')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical intake',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmergencyContact',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('emergency_notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical emergency contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('email_type', models.CharField(blank=True, choices=[('Work', 'Work'), ('Personal', 'Personal')], max_length=25)),
                ('active', models.BooleanField(blank=True, default=False)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('emergency_contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.EmergencyContact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical email',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContactInfoView',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255, null=True)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('county', models.CharField(max_length=255, null=True)),
                ('zip_code', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=255, null=True)),
                ('email', models.CharField(max_length=255, null=True)),
                ('intake_date', models.DateField(blank=True, null=True)),
                ('age_group', models.CharField(max_length=255, null=True)),
                ('address_one', models.CharField(max_length=255, null=True)),
                ('address_two', models.CharField(max_length=255, null=True)),
                ('suite', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=255, null=True)),
                ('state', models.CharField(max_length=255, null=True)),
                ('bad_address', models.BooleanField(blank=True, default=False)),
                ('do_not_contact', models.BooleanField(blank=True, default=False)),
                ('deceased', models.BooleanField(blank=True, default=False)),
                ('remove_mailing', models.BooleanField(blank=True, default=False)),
                ('region', models.CharField(max_length=255, null=True)),
                ('full_phone', models.CharField(max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical contact info view',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('middle_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(max_length=150)),
                ('salutation', models.CharField(blank=True, choices=[('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Miss', 'Miss'), ('Ms.', 'Ms.'), ('Dr.', 'Dr.'), ('Prof.', 'Prof.'), ('Rev.', 'Rev.')], max_length=25)),
                ('company', models.CharField(blank=True, max_length=150, null=True)),
                ('do_not_contact', models.BooleanField(blank=True, default=False)),
                ('donor', models.BooleanField(blank=True, default=False)),
                ('deceased', models.BooleanField(blank=True, default=False)),
                ('remove_mailing', models.BooleanField(blank=True, default=False)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('sip_client', models.BooleanField(blank=True, default=False)),
                ('core_client', models.BooleanField(blank=True, default=False)),
                ('careers_plus', models.BooleanField(blank=True, default=False)),
                ('careers_plus_youth', models.BooleanField(blank=True, default=False)),
                ('volunteer_check', models.BooleanField(blank=True, default=False)),
                ('access_news', models.BooleanField(blank=True, default=False)),
                ('other_services', models.BooleanField(blank=True, default=False)),
                ('contact_notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAuthorization',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('authorization_number', models.CharField(blank=True, max_length=150, null=True)),
                ('authorization_type', models.CharField(blank=True, choices=[('Hours', 'Hours'), ('Classes', 'Classes')], max_length=25, null=True)),
                ('start_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('end_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('total_time', models.CharField(blank=True, max_length=150, null=True)),
                ('billing_rate', models.CharField(blank=True, max_length=150, null=True)),
                ('student_plan', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=25, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('modified', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('intake_service_area', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.IntakeServiceArea')),
                ('outside_agency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical authorization',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAddress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address_one', models.CharField(blank=True, max_length=150, null=True)),
                ('address_two', models.CharField(blank=True, max_length=150, null=True)),
                ('suite', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=75, null=True)),
                ('state', models.CharField(blank=True, choices=[('Alabama', 'Alabama'), ('Alaska', 'Alaska'), ('Arizona', 'Arizona'), ('Arkansas', 'Arkansas'), ('California', 'California'), ('Colorado', 'Colorado'), ('Connecticut', 'Connecticut'), ('Delaware', 'Delaware'), ('Florida', 'Florida'), ('Georgia', 'Georgia'), ('Hawaii', 'Hawaii'), ('Idaho', 'Idaho'), ('Illinois', 'Illinois'), ('Indiana', 'Indiana'), ('Iowa', 'Iowa'), ('Kansas', 'Kansas'), ('Kentucky', 'Kentucky'), ('Louisiana', 'Louisiana'), ('Maine', 'Maine'), ('Maryland', 'Maryland'), ('Massachusetts', 'Massachusetts'), ('Michigan', 'Michigan'), ('Minnesota', 'Minnesota'), ('Mississippi', 'Mississippi'), ('Missouri', 'Missouri'), ('Montana', 'Montana'), ('Nebraska', 'Nebraska'), ('Nevada', 'Nevada'), ('New Hampshire', 'New Hampshire'), ('New Jersey', 'New Jersey'), ('New Mexico', 'New Mexico'), ('New York', 'New York'), ('North Carolina', 'North Carolina'), ('North Dakota', 'North Dakota'), ('Ohio', 'Ohio'), ('Oklahoma', 'Oklahoma'), ('Oregon', 'Oregon'), ('Pennsylvania', 'Pennsylvania'), ('Rhode Island', 'Rhode Island'), ('South Carolina', 'South Carolina'), ('South Dakota', 'South Dakota'), ('Tennessee', 'Tennessee'), ('Texas', 'Texas'), ('Utah', 'Utah'), ('Vermont', 'Vermont'), ('Virginia', 'Virginia'), ('Washington', 'Washington'), ('West Virginia', 'West Virginia'), ('Wisconsin', 'Wisconsin'), ('Wyoming', 'Wyoming')], default='California', max_length=25, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=15, null=True)),
                ('county', models.CharField(blank=True, choices=[('Alameda', 'Alameda'), ('Alpine', 'Alpine'), ('Amador', 'Amador'), ('Butte', 'Butte'), ('Colusa', 'Colusa'), ('Calaveras', 'Calaveras'), ('Contra Costa', 'Contra Costa'), ('Del Norte', 'Del Norte'), ('El Dorado', 'El Dorado'), ('Fresno', 'Fresno'), ('Glenn', 'Glenn'), ('Humboldt', 'Humboldt'), ('Imperial', 'Imperial'), ('Inyo', 'Inyo'), ('Kern', 'Kern'), ('Kings', 'Kings'), ('Klamath', 'Klamath'), ('Lake', 'Lake'), ('Lassen', 'Lassen'), ('Los Angeles', 'Los Angeles'), ('Madera', 'Madera'), ('Marin', 'Marin'), ('Mariposa', 'Mariposa'), ('Mendocino', 'Mendocino'), ('Merced', 'Merced'), ('Modoc', 'Modoc'), ('Mono', 'Mono'), ('Monterey', 'Monterey'), ('Napa', 'Napa'), ('Nevada', 'Nevada'), ('Orange', 'Orange'), ('Placer', 'Placer'), ('Plumas', 'Plumas'), ('Riverside', 'Riverside'), ('Sacramento', 'Sacramento'), ('San Benito', 'San Benito'), ('San Bernardino', 'San Bernardino'), ('San Diego', 'San Diego'), ('San Francisco', 'San Francisco'), ('San Joaquin', 'San Joaquin'), ('San Luis Obispo', 'San Luis Obispo'), ('San Mateo', 'San Mateo'), ('Santa Barbara', 'Santa Barbara'), ('Santa Clara', 'Santa Clara'), ('Santa Cruz', 'Santa Cruz'), ('Shasta', 'Shasta'), ('Sierra', 'Sierra'), ('Siskiyou', 'Siskiyou'), ('Solano', 'Solano'), ('Sonoma', 'Sonoma'), ('Stanislaus', 'Stanislaus'), ('Sutter', 'Sutter'), ('Tehama', 'Tehama'), ('Trinity', 'Trinity'), ('Tulare', 'Tulare'), ('Tuolumne', 'Tuolumne'), ('Ventura', 'Ventura'), ('Yolo', 'Yolo'), ('Yuba', 'Yuba'), ('Other/None', 'Other/None')], max_length=150, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('region', models.CharField(blank=True, max_length=150, null=True)),
                ('cross_streets', models.CharField(blank=True, max_length=150, null=True)),
                ('bad_address', models.BooleanField(blank=True, default=False)),
                ('preferred_medium', models.CharField(blank=True, choices=[('N/A', 'N/A'), ('Print', 'Print'), ('Large Print', 'Large Print'), ('Braille', 'Braille'), ('E-Mail', 'E-Mail'), ('Cassette', 'Cassette')], max_length=150, null=True)),
                ('address_notes', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lynx.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
